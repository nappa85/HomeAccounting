/*
 * File: app/model/Event.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('HomeAccounting.model.Event', {
	extend: 'Ext.data.Model',

	requires: [
		'Ext.data.field.String',
		'Ext.data.field.Date',
		'Ext.data.field.Number'
	],

	fields: [
		{
			type: 'string',
			name: 'id'
		},
		{
			type: 'string',
			name: 'summary'
		},
		{
			type: 'date',
			convert: function(v, rec) {
				return Ext.Date.parse(v.dateTime, 'c');
			},
			name: 'start',
			dateFormat: 'c'
		},
		{
			type: 'string',
			convert: function(v, rec) {
				var oMerchants = Ext.data.StoreManager.get('Merchants'),
					oItems = Ext.data.StoreManager.get('Items'),
					oTags = Ext.data.StoreManager.get('Tags'),
					i = 0,
					oGeneric;

				try {
					Ext.apply(rec.data, Ext.JSON.decode(v, true));

					oGeneric = oMerchants.findRecord('name', rec.data.merchant, 0, false, false, true);
					if(oGeneric === null) {
						oMerchants.add({name: rec.data.merchant, total: rec.data.total});
					}
					else {
						oGeneric.set('total', oGeneric.get('total') + rec.data.total);
					}

					for(; i < rec.data.rows.length; i++) {
						oGeneric = oItems.findRecord('name', rec.data.rows[i].item, 0, false, false, true);
						if(oGeneric === null) {
							oItems.add({name: rec.data.rows[i].item, total: (rec.data.rows[i].number * rec.data.rows[i].price)});
						}
						else {
							oGeneric.set('total', oGeneric.get('total') + (rec.data.rows[i].number * rec.data.rows[i].price));
						}

						if(!Ext.isEmpty(rec.data.rows[i].tag)) {
							oGeneric = oTags.findRecord('name', rec.data.rows[i].tag, 0, false, false, true);
							if(oGeneric === null) {
								oTags.add({name: rec.data.rows[i].tag, total: (rec.data.rows[i].number * rec.data.rows[i].price)});
							}
							else {
								oGeneric.set('total', oGeneric.get('total') + (rec.data.rows[i].number * rec.data.rows[i].price));
							}
						}
					}
				}
				catch(e) {
					if(console && console.log) {
						console.log(e);
					}
				}
				return v;
			},
			name: 'description'
		},
		{
			type: 'string',
			name: 'merchant'
		},
		{
			type: 'date',
			name: 'date',
			dateFormat: 'Y-m-d'
		},
		{
			type: 'date',
			name: 'time',
			dateFormat: 'H:i:s'
		},
		{
			type: 'float',
			name: 'total'
		},
		{
			name: 'rows'
		}
	]
});